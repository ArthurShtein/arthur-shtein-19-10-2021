{"version":3,"sources":["cmps/Favourites/Favourites.jsx","cmps/Header/Header.jsx","weatherService/weatherService.js","store/actions/weatherAction.js","utils.js","cmps/CurrentDay/CurrentDay.jsx","cmps/SingleDayForecast/SingleDayForecast.jsx","cmps/FiveDaysForecast/FiveDaysForecast.jsx","cmps/Home/Home.jsx","App.jsx","store/reducers/weatherReducer.js","store/index.js","index.js"],"names":["Favourites","useEffect","JSON","parse","localStorage","getItem","Header","to","weatherService","getCurrentLocation","getAutoComplete","getFiveDaysForecast","organizeAutoComplete","arr","map","item","label","LocalizedName","Key","API_KEY","locationKey","a","axios","get","data","console","log","searchValue","DailyForecasts","loadFiveDaysForecast","cityKey","dispatch","fiveDaysResult","type","utilService","padNum","number","strNum","length","checkFavouritesDuplication","favCountry","countriesFromLocal","key","json","_loadFromStorage","push","_saveToStorage","stringify","setItem","CurrentDay","cityName","useState","isFavourite","setIsFavourite","singleForecast","useSelector","state","weatherModule","favourites","useDispatch","className","src","icon","alt","temp","Button","variant","onClick","SingleDayForecast","weatherType","Day","IconPhrase","minTemp","Temperature","Minimum","Value","maxTemp","Maximum","newDate","Date","getDay","weekDay","Array","Icon","FiveDaysForecast","keyResult","currentCityKey","fiveDaysForecast","index","Home","inputData","setInputData","setCityKey","setCityName","setClassName","inputResults","searchOptions","result","name","currentLocationResult","fTemp","Imperial","singleNameKey","WeatherIcon","saveSingleForecast","Autocomplete","disablePortal","id","options","sx","width","onInputChange","e","text","target","value","autoCompleteResult","onChange","option","renderInput","params","TextField","App","excact","path","component","INITIAL_STATE","currentLocation","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94f7806b.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const Favourites = () => {\r\n  //   const favourites = useSelector((state) => state.weatherModule.favourites);\r\n  //   console.log(favourites);\r\n\r\n  useEffect(() => {\r\n    let favouritesFromData = JSON.parse(localStorage.getItem(\"favourites\"));\r\n  }, []);\r\n\r\n  return <div></div>;\r\n};\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\nimport App from \"../../App\"\r\nimport { Favourites } from \"../Favourites/Favourites\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <header>\r\n      <div> Herolo Weather Task </div>\r\n      <div>\r\n        <Link to=\"/\"> Home </Link>\r\n        <Link to=\"/favourites\"> Favourites </Link>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\nimport { useState } from \"react\";\r\n\r\nexport const weatherService = {\r\n  getCurrentLocation,\r\n  getAutoComplete,\r\n  getFiveDaysForecast,\r\n  organizeAutoComplete,\r\n};\r\n\r\n\r\n// const API_KEY = \"O8PwbBOpA3ugM6K1RbYuVKYOGk1fI1mf\";\r\nconst API_KEY = \"4aBBAPNL6URV8G56agI6OJks01WPFlSa\";\r\n\r\n// CURRENT LOCATION API\r\nasync function getCurrentLocation(locationKey) {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `http://dataservice.accuweather.com/currentconditions/v1/${locationKey}?apikey=${API_KEY}`\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\n// AUTO COMPLETE API\r\nasync function getAutoComplete(searchValue) {\r\n  try {\r\n    let { data } = await axios.get(\r\n      `http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${API_KEY}&q=${searchValue}`\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\n// 5 DAYS FORECAST API\r\nasync function getFiveDaysForecast(locationKey) {\r\n  try {\r\n    let { data } = await axios.get(\r\n      `http://dataservice.accuweather.com/forecasts/v1/daily/5day/${locationKey}?apikey=${API_KEY}`\r\n    );\r\n    return data.DailyForecasts;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nfunction organizeAutoComplete(arr) {\r\n  return arr.map((item) => {return { label: item.LocalizedName , Key: item.Key }});\r\n}","import { weatherService } from \"../../weatherService/weatherService\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport function loadAutoComplete(searchValue) {\r\n  return async (dispatch) => {\r\n    const autoCompleteResult = await weatherService.getAutoComplete(\r\n      searchValue\r\n    );\r\n    dispatch({ type: \"SET_SEARCH_OPTIONS\", autoCompleteResult });\r\n  };\r\n}\r\n\r\n\r\n\r\nexport function loadFiveDaysForecast(cityKey) {\r\n  return async (dispatch) => {\r\n    const fiveDaysResult = await weatherService.getFiveDaysForecast(cityKey);\r\n    dispatch({ type: \"SET_FIVE_DAYS_FORECAST\", fiveDaysResult });\r\n  };\r\n}\r\n\r\nexport function loadCurrentLocation(name) {\r\n  return async (dispatch) => {\r\n    const currLocationResult = await weatherService.getCurrentLocation(name);\r\n    // dispatch({ type: \"SET_SINGLE_FORECAST\", currLocationResult });\r\n  };\r\n}\r\n\r\nexport function saveToFavourites(object) {\r\n  return (dispatch) => {\r\n    dispatch({ type: \"SET_FAVOURITES\" , object});\r\n  }\r\n}\r\n\r\nexport function saveNewCityKey(key) {\r\n  return (dispatch) => {\r\n    dispatch({ type: \"SET_CITY_KEY\", key });\r\n  };\r\n}\r\n\r\nexport function saveSingleForecast(name, cityKey) {\r\n  return async (dispatch) => {\r\n    const currentLocationResult = await weatherService.getCurrentLocation(\r\n      cityKey\r\n    );\r\n    const fTemp = currentLocationResult[0].Temperature.Imperial.Value;\r\n    const singleNameKey = {\r\n      cityName: name,\r\n      temp: fTemp,\r\n      icon: currentLocationResult[0].WeatherIcon,\r\n    };\r\n    dispatch({ type: \"SET_SINGLE_FORECAST\", singleNameKey });\r\n    // const test = useSelector((state) => state.weatherModule.singleForecast);\r\n    // console.log(test, '<<<< TEST ');\r\n  };\r\n\r\n  // return (dispatch) => {\r\n  //   dispatch({ type: \"SET_SINGLE_FORECAST\", name, cityKey });\r\n  // };\r\n}\r\n","export const utilService = {\r\n  padNum,\r\n  checkFavouritesDuplication,\r\n};\r\n\r\nfunction padNum(number) {\r\n  const strNum = number + \"\";\r\n  if (strNum.length === 1) {\r\n    return \"0\" + strNum;\r\n  } else {\r\n    return strNum;\r\n  }\r\n}\r\n\r\nfunction checkFavouritesDuplication(favCountry) {\r\n  console.log(\"favCountry\", favCountry);\r\n  let arr = [];\r\n\r\n  const countriesFromLocal = _loadFromStorage(\"favourites\");\r\n  if (!countriesFromLocal) {\r\n    arr.push(favCountry);\r\n    _saveToStorage(\"favourites\", arr);\r\n    return arr;\r\n  } else {\r\n    arr = countriesFromLocal;\r\n    arr.push(favCountry);\r\n    console.log('arr >>>', arr);\r\n\r\n    // const newArr = [];\r\n    // for (var i = 0; i < arr.length; i++) {\r\n    //   if (arr[i].city !== favCountry.city) arr.push(favCountry);\r\n    // }\r\n    _saveToStorage(\"favourites\", arr);\r\n    return arr;\r\n  }\r\n\r\n  _saveToStorage(\"favourites\", arr);\r\n  return arr;\r\n}\r\n\r\nfunction _saveToStorage(key, data) {\r\n  var json = JSON.stringify(data);\r\n  localStorage.setItem(key, json);\r\n}\r\n\r\nfunction _loadFromStorage(key) {\r\n  var json = localStorage.getItem(key);\r\n  var data = JSON.parse(json);\r\n  return data;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport { utilService } from \"../../utils.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { saveToFavourites } from \"../../store/actions/weatherAction.js\";\r\nimport \"./CurrentDay.css\";\r\nexport const CurrentDay = ({ cityName }) => {\r\n  const [isFavourite, setIsFavourite] = useState(false);\r\n\r\n  const favourites = useSelector((state) => state.weatherModule.favourites);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const singleForecast = useSelector(\r\n    (state) => state.weatherModule.singleForecast\r\n  );\r\n\r\n  function handleClick() {\r\n    setIsFavourite(!isFavourite);\r\n\r\n    // const cityToAdd = { city: cityName, temp: singleForecast.temp };\r\n    // const citysToSave = utilService.checkFavouritesDuplication(cityToAdd);\r\n    // console.log(\"citysToSave >>>\", citysToSave);\r\n  }\r\n\r\n  return (\r\n    <div className=\"main-curr-day\">\r\n      <div className=\"curr-day-container\">\r\n        <div className=\"left-section\">\r\n          <img\r\n            className=\"main-img\"\r\n            src={`https://developer.accuweather.com/sites/default/files/${utilService.padNum(\r\n              singleForecast.icon\r\n            )}-s.png`}\r\n            alt=\"\"\r\n          />\r\n          <div>\r\n            <h1> {singleForecast.cityName} </h1>\r\n            <h3> {singleForecast.temp}F° </h3>\r\n          </div>\r\n        </div>\r\n        <div className=\"right-section\">\r\n          {isFavourite ? (\r\n            <FavoriteIcon className=\"full-icon\" />\r\n          ) : (\r\n            <FavoriteBorderIcon className=\"icon\"> </FavoriteBorderIcon>\r\n          )}\r\n          <Button variant=\"contained\" onClick={handleClick}>\r\n            Save to favourites\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentDay;\r\n","import React from 'react'\r\nimport { utilService } from '../../utils.js'\r\nimport './SingleDayForecast.css'\r\n\r\n\r\nexport const SingleDayForecast = ({item}) => {\r\n    const weatherType = item.Day.IconPhrase;\r\n    const minTemp = item.Temperature.Minimum.Value;\r\n    const maxTemp = item.Temperature.Maximum.Value;\r\n\r\n    const newDate = new Date(item.Date).getDay()\r\n    const weekDay = new Array(7)\r\n    weekDay[0] = 'Sunday'\r\n    weekDay[1] = 'Monday'\r\n    weekDay[2] = 'Tuesday'\r\n    weekDay[3] = 'Wednseday'\r\n    weekDay[4] = 'Thursday'\r\n    weekDay[5] = 'Friday'\r\n    weekDay[6] = 'Saturday'\r\n\r\n    if (!item) return <div> Loading ... </div>\r\n    return (\r\n      <div className=\"single-day-container\">\r\n        <div>\r\n          <img\r\n            src={`https://developer.accuweather.com/sites/default/files/${utilService.padNum(\r\n              item.Day.Icon\r\n            )}-s.png`}\r\n            alt={weatherType}\r\n          />\r\n        </div>\r\n        <h3> {weekDay[newDate]}</h3>\r\n          <h5>{weatherType}</h5>\r\n        <p>\r\n          {minTemp}F° - {maxTemp}F°\r\n        </p>\r\n      </div>\r\n    );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loadFiveDaysForecast, saveNewCityName } from \"../../store/actions/weatherAction\";\r\nimport { SingleDayForecast } from \"../SingleDayForecast/SingleDayForecast\"\r\nimport './FiveDaysForecast.css'\r\n\r\nexport const FiveDaysForecast = () => {\r\n  const keyResult = useSelector((state) => state.weatherModule.currentCityKey); // PROPS MAYBE?\r\n  const fiveDaysForecast = useSelector(\r\n    (state) => state.weatherModule.fiveDaysForecast\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(loadFiveDaysForecast(keyResult));\r\n    // dispatch(saveNewCityName(keyResult));\r\n  }, [keyResult]);\r\n\r\n  return (\r\n    <div className='five-days-container'>\r\n      {fiveDaysForecast.map((item, index) =>{ \r\n          return <SingleDayForecast key={index} item={item}/>\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  loadAutoComplete,\r\n  saveSingleForecast,\r\n  loadFiveDaysForecast,\r\n} from \"../../store/actions/weatherAction\";\r\n\r\nimport CurrentDay from \"../CurrentDay/CurrentDay\";\r\nimport { weatherService } from \"../../weatherService/weatherService\";\r\nimport { FiveDaysForecast } from \"../FiveDaysForecast/FiveDaysForecast\";\r\n\r\n\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\n\r\n\r\nimport \"./Home.css\";\r\n\r\nexport const  Home = () => {\r\n  const [inputData, setInputData] = useState([]);\r\n  const [cityKey, setCityKey] = useState(\"215854\");\r\n  const [cityName, setCityName] = useState(\"Tel Aviv\");\r\n  const [className, setClassName] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const inputResults = useSelector(\r\n    (state) => state.weatherModule.searchOptions\r\n  );\r\n\r\n  const handleChange = (e) => {\r\n    const text = e.target.value;\r\n    dispatch(loadAutoComplete(text));\r\n  };\r\n\r\n  const handleChanges = (key, label) => {\r\n    setCityKey(key);\r\n    setCityName(label);\r\n  };\r\n\r\n  const changeTheme = () => {\r\n    if (!className.length) {\r\n      setClassName(\"darkmode\");\r\n    } else {\r\n      setClassName(\"\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const result = weatherService.organizeAutoComplete(inputResults);\r\n    setInputData(result);\r\n    dispatch(saveSingleForecast(cityName, cityKey));\r\n    dispatch(loadFiveDaysForecast(cityKey));\r\n  }, [inputResults, cityKey, cityName, className]);\r\n\r\n  return (\r\n    <>\r\n      <div className={className}>\r\n        <div className=\"input-header\">\r\n        <button className='toggle-btn' onClick={changeTheme}> Change Theme </button>\r\n          <h2 className=\"header-search\">Search the weather in any city:</h2>\r\n          <Autocomplete\r\n            className=\"input\"\r\n            disablePortal\r\n            id=\"combo-box-demo\"\r\n            options={inputData}\r\n            sx={{ width: 300 }}\r\n            onInputChange={handleChange}\r\n            onChange={(e, option) => handleChanges(option.Key, option.label)}\r\n            renderInput={(params) => <TextField {...params} label=\"City\" />}\r\n          />\r\n        </div>\r\n        <CurrentDay cityName={cityName} />\r\n        <FiveDaysForecast />\r\n      </div>\r\n    </>\r\n  );\r\n}","import React from \"react\";\nimport { HashRouter, Router, Route, Switch } from \"react-router-dom\";\nimport { Favourites } from \"./cmps/Favourites/Favourites\";\nimport { Header } from \"./cmps/Header/Header\";\n\nimport { Home } from \"./cmps/Home/Home\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Header></Header>\n      <main>\n        <Switch>\n          <Route excact path=\"/favourites\" component={Favourites} />\n          <Route excact path=\"/\" component={Home} />\n        </Switch>\n      </main>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const INITIAL_STATE = {\r\n  currentLocation: \"Tel Aviv\",\r\n  currentCityKey: \"215854\",\r\n  fiveDaysForecast: [],\r\n  searchOptions: [],\r\n  singleForecast: {},\r\n  favourites: [],\r\n};\r\n\r\nexport function weatherReducer(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case \"SET_CURRENT_LOCATION\":\r\n      return {\r\n        ...state,\r\n        currentLocation: action.currentLocation,\r\n      };\r\n    case \"SET_SEARCH_OPTIONS\":\r\n      return {\r\n        ...state,\r\n        searchOptions: action.autoCompleteResult,\r\n      };\r\n    case \"SET_CITY_KEY\":\r\n      return {\r\n        ...state,\r\n        currentCityKey: action.key,\r\n      };\r\n    case \"SET_FIVE_DAYS_FORECAST\":\r\n      return {\r\n        ...state,\r\n        fiveDaysForecast: action.fiveDaysResult,\r\n      };\r\n    // case \"SET_CITY_NAME\":\r\n    //   return {\r\n    //     ...state,\r\n    //     currentLocation: action.name,\r\n    //   };\r\n    case \"SET_SINGLE_FORECAST\":\r\n      return {\r\n        ...state,\r\n        singleForecast: action.singleNameKey,\r\n      };\r\n    case \"SET_FAVOURITES\":\r\n      return {\r\n        ...state,\r\n        favourites: action.cityName\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { weatherReducer } from './reducers/weatherReducer'\r\n\r\n// Connecting redux devtools\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n// Combining reducers into one\r\nconst rootReducer = combineReducers({\r\n  weatherModule: weatherReducer,\r\n});\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\nimport { store } from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}